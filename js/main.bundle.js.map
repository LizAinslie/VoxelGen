{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://lizzy-procedural-site/./src/js/utils/detector.js","webpack://lizzy-procedural-site/./src/js/app/util.js","webpack://lizzy-procedural-site/./src/js/app/world.js","webpack://lizzy-procedural-site/./src/js/app/index.js","webpack://lizzy-procedural-site/./src/js/app.js"],"sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nexport default {\n  canvas: !!window.CanvasRenderingContext2D,\n  webgl: (function() {\n    try {\n      var canvas = document.createElement('canvas');\n\n      return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n    } catch(e) {\n      return false;\n    }\n  })(),\n\n  workers: !!window.Worker,\n  fileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n  getWebGLErrorMessage: function() {\n    var element = document.createElement('div');\n    element.id = 'webgl-error-message';\n    element.style.fontFamily = 'monospace';\n    element.style.fontSize = '13px';\n    element.style.fontWeight = 'normal';\n    element.style.textAlign = 'center';\n    element.style.background = '#fff';\n    element.style.color = '#000';\n    element.style.padding = '1.5em';\n    element.style.width = '400px';\n    element.style.margin = '5em auto 0';\n\n    if(!this.webgl) {\n      element.innerHTML = window.WebGLRenderingContext ? [\n        'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\n        'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n      ].join('\\n') : [\n        'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\n        'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\n      ].join('\\n');\n    }\n\n    return element;\n  },\n\n  addGetWebGLMessage: function(parameters) {\n    var parent, id, element;\n\n    parameters = parameters || {};\n\n    parent = parameters.parent !== undefined ? parameters.parent : document.body;\n    id = parameters.id !== undefined ? parameters.id : 'oldie';\n\n    element = this.getWebGLErrorMessage();\n    element.id = id;\n\n    parent.appendChild(element);\n  }\n};\n","import SimplexNoise from \"simplex-noise\";\n\nexport const sleep = ms => new Promise(r => setTimeout(r, ms))\n\nexport const simplex = new SimplexNoise();\n\nexport function normalizeNoise(noise) {\n  return (noise + 1) * 0.5\n}\n","import {BoxBufferGeometry, BufferAttribute, Color, Mesh, MeshLambertMaterial, VertexColors} from \"three\";\nimport {normalizeNoise, simplex} from \"./util\";\nimport {BufferGeometryUtils} from \"three/examples/jsm/utils/BufferGeometryUtils\";\n\nexport const BLOCK_SIZE = 5;\nexport const CHUNK_SIZE = 16;\nexport const Y_MAX = 32;\nexport const WORLD_SIZE = 384;\nexport const HUE_MAX = 360;\nexport const Y_COLOR_MULT = HUE_MAX / Y_MAX\n\nexport class Block {\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  getGeometry() {\n    const geometry = new BoxBufferGeometry(BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n    geometry.translate(this.x * BLOCK_SIZE, this.y * BLOCK_SIZE, this.z * BLOCK_SIZE);\n\n    const hue = Math.max(Math.floor(this.y * Y_COLOR_MULT), 0);\n    const color = new Color(`hsl(${hue}, 70%, 60%)`);\n    const rgb = color.toArray().map(v => v * 255);\n    // make an array to store colors for each vertex\n    const numVertices = geometry.getAttribute('position').count;\n    const itemSize = 3;\n    const colors = new Uint8Array(itemSize * numVertices);\n\n    // copy the color into the colors array for each vertex\n    colors.forEach((v, ndx) => {\n      colors[ndx] = rgb[ndx % 3];\n    });\n\n    const normalized = true;\n    const colorAttrib = new BufferAttribute(colors, itemSize, normalized);\n    geometry.setAttribute('color', colorAttrib);\n\n    return geometry;\n  }\n}\n\nexport class Chunk {\n  constructor(chunkX, chunkZ, noiseY) {\n    this.chunkX = chunkX;\n    this.chunkZ = chunkZ;\n\n    this.blocks = [];\n    for (let x = 0; x < CHUNK_SIZE; x++) {\n      for (let z = 0; z < CHUNK_SIZE; z++) {\n        const noiseX = (x + (this.chunkX * CHUNK_SIZE)) / 200;\n        const noiseZ = (z + (this.chunkZ * CHUNK_SIZE)) / 200;\n\n        let y = normalizeNoise(simplex.noise3D(simplex.noise3D(noiseX, noiseY, -noiseZ) + noiseX, noiseY, simplex.noise3D(noiseZ, noiseY, -noiseX) + noiseZ));\n        y = Math.round(y * Y_MAX);\n\n        while (y-- >= -1) {\n          if (y < -1) break;\n\n          const block = new Block(x, y, z);\n          this.blocks.push(block);\n        }\n      }\n    }\n  }\n  \n  getMesh() {\n    const cubeGeometries = [];\n    this.blocks.forEach(block => {\n      cubeGeometries.push(block.getGeometry());\n    });\n\n    const mergedGeometry = BufferGeometryUtils.mergeBufferGeometries(\n      cubeGeometries, false);\n    const material = new MeshLambertMaterial({\n      vertexColors: VertexColors,\n    });\n    const mesh = new Mesh(mergedGeometry, material);\n\n    const chunkRealX = this.chunkX * CHUNK_SIZE * BLOCK_SIZE;\n    const chunkRealY = 0;\n    const chunkRealZ = this.chunkZ * CHUNK_SIZE * BLOCK_SIZE\n\n    mesh.position.set(chunkRealX, chunkRealY, chunkRealZ);\n    return mesh;\n  }\n}\n\nexport class World {\n  constructor(scene) {\n    this.scene = scene;\n    this.chunks = [];\n  }\n\n  get cubes() {\n    return WORLD_SIZE * WORLD_SIZE * Y_MAX;\n  }\n\n  preGenerate(radius = WORLD_SIZE) {\n    console.log(`Generating ${this.cubes} cubes`);\n    const noiseY = Date.now() / 100000;\n    radius = Math.round(radius / CHUNK_SIZE)\n    for (let chunkX = 0; chunkX < radius; chunkX++)\n      for (let chunkZ = 0; chunkZ < radius; chunkZ++)\n        this.generateChunkAtChunkPos(chunkX, chunkZ, noiseY);\n  }\n\n  generateChunkAtChunkPos(chunkX, chunkZ, noiseY) {\n    // console.log(`generating chunk mesh at ${chunkX}, ${chunkZ} (x,z)`)\n    const chunk = new Chunk(chunkX, chunkZ, noiseY);\n    this.chunks.push(chunk);\n    const mesh = chunk.getMesh();\n    this.scene.add(mesh);\n  }\n\n  generateChunkAtBlockPos(blockX, blockZ, noiseY) {\n    const chunkX = Math.round(blockX / CHUNK_SIZE);\n    const chunkZ = Math.round(blockZ / CHUNK_SIZE);\n    this.generateChunkAtChunkPos(chunkX, chunkZ, noiseY);\n  }\n}\n","import {\n  AmbientLight, BoxGeometry, HemisphereLight, Mesh, MeshLambertMaterial,\n  PerspectiveCamera,\n  Scene,\n  WebGLRenderer,\n} from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { BLOCK_SIZE, World, WORLD_SIZE, Y_MAX } from \"./world\";\nimport {EffectComposer} from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport {SSAOPass} from \"three/examples/jsm/postprocessing/SSAOPass\";\n\nexport default class App {\n  constructor(container) {\n    this.container = container;\n    this.renderer = new WebGLRenderer({\n      antialias: true,\n    });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    // this.renderer.setClearColor(new Color('skyblue'))\n    this.container.appendChild(this.renderer.domElement);\n\n    this.width = this.renderer.domElement.width;\n    this.height = this.renderer.domElement.height;\n\n    this.camera = new PerspectiveCamera(75, this.width / this.height, 1, 2000);\n    this.camera.position.y = (Y_MAX * BLOCK_SIZE) * 2\n    this.camera.updateProjectionMatrix();\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.enableDamping = true;\n    this.controls.autoRotate = true;\n    this.controls.target.set(WORLD_SIZE * 0.5 * BLOCK_SIZE, 0, WORLD_SIZE * 0.5 * BLOCK_SIZE)\n    this.controls.update();\n\n    this.scene = new Scene();\n\n    // this.composer = new EffectComposer(this.renderer);\n    // const ssaoPass = new SSAOPass(this.scene, this.camera, this.width, this.height);\n    // ssaoPass.kernelRadius = 4;\n    // this.composer.addPass(ssaoPass);\n\n    this.world = new World(this.scene);\n    this.world.preGenerate();\n\n    const ambientLight = new AmbientLight(0xffffff);\n    this.scene.add(ambientLight);\n\n    window.onresize = () => {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n\n      this.camera.aspect = this.width / this.height;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(this.width, this.height);\n      // this.composer.setSize(this.width, this.height);\n    }\n\n    if (typeof window.__THREE_DEVTOOLS__ !== 'undefined') {\n      window.__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', { detail: this.scene }));\n      window.__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', { detail: this.renderer }));\n    }\n  }\n    \n  render() {\n    requestAnimationFrame(this.render.bind(this));\n\n    this.controls.update();\n\n    const loadingDiv = document.getElementById('loading');\n    if (loadingDiv.style.display !== 'none') loadingDiv.style.display = 'none'\n\n    this.renderer.render(this.scene, this.camera);\n    // this.composer.render();\n  }\n}\n","import Detector from './utils/detector';\nimport App from './app/index';\n\n// Styles\nimport './../css/app.scss';\n\nif(!Detector.webgl) Detector.addGetWebGLMessage();\nelse {\n  const container = document.getElementById('appContainer');\n  const app = new App(container);\n  app.render();\n}\n"],"names":["canvas","window","CanvasRenderingContext2D","webgl","document","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","this","innerHTML","join","addGetWebGLMessage","parameters","parent","undefined","body","appendChild","simplex","SimplexNoise","CHUNK_SIZE","WORLD_SIZE","Block","x","y","z","geometry","BoxBufferGeometry","translate","hue","Math","max","floor","HUE_MAX","rgb","Color","toArray","map","v","numVertices","getAttribute","count","colors","Uint8Array","forEach","ndx","colorAttrib","BufferAttribute","setAttribute","Chunk","chunkX","chunkZ","noiseY","blocks","noiseX","noiseZ","noise3D","round","block","push","cubeGeometries","getGeometry","mergedGeometry","BufferGeometryUtils","material","MeshLambertMaterial","vertexColors","VertexColors","mesh","Mesh","chunkRealX","chunkRealZ","position","set","World","scene","chunks","radius","console","log","cubes","Date","now","generateChunkAtChunkPos","chunk","getMesh","add","blockX","blockZ","App","container","renderer","WebGLRenderer","antialias","setSize","innerWidth","innerHeight","domElement","height","camera","PerspectiveCamera","Y_MAX","updateProjectionMatrix","controls","OrbitControls","enableDamping","autoRotate","target","update","Scene","world","preGenerate","ambientLight","AmbientLight","onresize","aspect","__THREE_DEVTOOLS__","dispatchEvent","CustomEvent","detail","requestAnimationFrame","render","bind","loadingDiv","getElementById","display","Detector"],"sourceRoot":""}